{"version":3,"sources":["all.js"],"names":["regionSearch","document","querySelector","region","str","forEach","item","innerHTML","axios","get","headers","getAuthorizationHeader","then","response","textContent","JSON","stringify","data","error","console","log","AppID","AppKey","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","update","HMAC","getHMAC","Authorization"],"mappings":";;AAAA,IAAMA,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAArB;AACA,IAAIC,MAAM,GAAG,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB,EAA+B,KAA/B,EAAqC,KAArC,EAA2C,KAA3C,EAAiD,KAAjD,EAAuD,KAAvD,EAA6D,KAA7D,EAAmE,KAAnE,EAAyE,KAAzE,EAA+E,KAA/E,EAAqF,KAArF,EAA2F,KAA3F,EAAiG,KAAjG,EAAuG,KAAvG,EAA6G,KAA7G,EAAmH,KAAnH,EAAyH,KAAzH,EAA+H,KAA/H,CAAb;AACI,IAAIC,GAAG,wKAAP;AAEAD,MAAM,CAACE,OAAP,CAAe,UAASC,IAAT,EAAe;AAC5BF,EAAAA,GAAG,8BAAsBE,IAAtB,uCAAoDA,IAApD,cAAH;AACD,CAFD;AAIFN,YAAY,CAACO,SAAb,GAAyBH,GAAzB;AAMFI,KAAK,CAACC,GAAN,CACE,EADF,EAEE;AACGC,EAAAA,OAAO,EAAEC,sBAAsB;AADlC,CAFF,EAMCC,IAND,CAMM,UAAUC,QAAV,EAAoB;AACzBZ,EAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BY,WAA/B,GAA2CC,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACI,IAAxB,CAA3C;AACA,CARD,WASO,UAAUC,KAAV,EAAiB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,CAXD,E,CAeA;;AACA,SAASP,sBAAT,GAAkC;AAClC;AACG,MAAIU,KAAK,GAAG,kCAAZ;AACA,MAAIC,MAAM,GAAG,6BAAb,CAH+B,CAIlC;;AACG,MAAIC,SAAS,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAhB;AACA,MAAIC,MAAM,GAAG,IAAIC,KAAJ,CAAU,OAAV,EAAmB,MAAnB,CAAb;AACAD,EAAAA,MAAM,CAACE,UAAP,CAAkBN,MAAlB,EAA0B,MAA1B;AACAI,EAAAA,MAAM,CAACG,MAAP,CAAc,aAAaN,SAA3B;AACA,MAAIO,IAAI,GAAGJ,MAAM,CAACK,OAAP,CAAe,KAAf,CAAX;AACA,MAAIC,aAAa,GAAG,qBAAqBX,KAArB,GAA6B,+DAA7B,GAA+FS,IAA/F,GAAsG,IAA1H;AACA,SAAO;AAAE,qBAAiBE,aAAnB;AAAkC,cAAUT;AAA5C,GAAP;AACF","file":"all.js","sourcesContent":["const regionSearch = document.querySelector('.regionSearch');\nlet region = ['基隆市','台北市','新北市','桃園市','新竹市','新竹縣','宜蘭縣','苗栗縣','臺中市','彰化縣','南投縣','雲林縣','嘉義市','嘉義縣','臺南市','高雄市','屏東縣','臺東縣','花蓮縣','金門縣','連江縣','澎湖縣'];\n    let str = `<option value=\"地區搜尋\" disabled selected hidden>請選擇縣市</option>\n  <option value=\"\">全部地區</option>`;\n    region.forEach(function(item) {\n      str += `<option value=\"${item}\" class=\"regionOption\">${item}</option>`\n    })\n                   \n  regionSearch.innerHTML = str;\n\n\n\n\n\naxios.get(\n  '',\n  {\n     headers: getAuthorizationHeader()\n  }\n)\n.then(function (response) {\n document.querySelector('body').textContent=JSON.stringify(response.data);\n})\n.catch(function (error) {\n console.log(error);\n}); \n\n\n\n// API 帶 header 驗證\nfunction getAuthorizationHeader() {\n//  填入自己 ID、KEY 開始\n   let AppID = 'e1aa6d263b8549b796b5299c1eae6f21';\n   let AppKey = 'KyNX20FckXfQPQ16kYeVMP4jJMQ';\n//  填入自己 ID、KEY 結束\n   let GMTString = new Date().toGMTString();\n   let ShaObj = new jsSHA('SHA-1', 'TEXT');\n   ShaObj.setHMACKey(AppKey, 'TEXT');\n   ShaObj.update('x-date: ' + GMTString);\n   let HMAC = ShaObj.getHMAC('B64');\n   let Authorization = 'hmac username=\\\"' + AppID + '\\\", algorithm=\\\"hmac-sha1\\\", headers=\\\"x-date\\\", signature=\\\"' + HMAC + '\\\"';\n   return { 'Authorization': Authorization, 'X-Date': GMTString }; \n}"]}